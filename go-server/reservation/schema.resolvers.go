package reservation

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.54

import (
	"context"
	"go-server/common"
	"go-server/reservation/resemodel"
)

// AddReservation is the resolver for the addReservation field.
func (r *mutationResolver) AddReservation(ctx context.Context, input resemodel.ReservationCreateInput) (*resemodel.Reservation, error) {
	return r.Resolver.AddReservation(ctx, input)
}

// UpdateReservation is the resolver for the updateReservation field.
func (r *mutationResolver) UpdateReservation(ctx context.Context, input resemodel.ReservationUpdateInput) (*resemodel.Reservation, error) {
	return r.Resolver.UpdateReservation(ctx, input)
}

// Reservations is the resolver for the reservations field.
func (r *queryResolver) Reservations(ctx context.Context, begin *common.Date, end *common.Date, status *resemodel.ReservationStatus) ([]*resemodel.Reservation, error) {
	return r.Resolver.Reservations(ctx, begin, end, status)
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
